{"version":3,"file":"static/js/149.4dfbf166.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/BGVideo/bgvideo.module.css?c7e3","components/BGVideo/BGVideo.jsx","webpack://goit-react-hw-08-phonebook/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"video\":\"bgvideo_video__FCK8w\",\"bgContainer\":\"bgvideo_bgContainer__TEr--\"};","import loop from '../../video/loop.mp4';\nimport styles from './bgvideo.module.css';\n\nconst BGVideo = () => {\n  return (\n    <div className={styles.bgContainer}>\n      <video src={loop} autoPlay loop muted className={styles.video} />\n    </div>\n  );\n};\n\nexport default BGVideo;\n","// extracted by mini-css-extract-plugin\nexport default {\"formWrapper\":\"RegisterForm_formWrapper__5v4BM\",\"form\":\"RegisterForm_form__Tv43W\",\"wrapper\":\"RegisterForm_wrapper__cfB-9\"};","import { useState, useId } from 'react';\n\nimport BGVideo from 'components/BGVideo/BGVideo';\n\nimport styles from './RegisterForm.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst RegisterForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...INITIAL_STATE });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n  };\n\n  const nameId = useId();\n  const emailId = useId();\n  const passwordId = useId();\n\n  const { name, email, password } = state;\n  return (\n    <div>\n      <BGVideo />\n      <div className={styles.formWrapper}>\n        <h1>Sign in</h1>\n        <form className={styles.form} onSubmit={handleSubmit}>\n          <div className={styles.wrapper}>\n            <label htmlFor={nameId}>Name:</label>\n            <input\n              value={name}\n              onChange={handleChange}\n              type=\"text\"\n              name=\"name\"\n              id={nameId}\n              required\n            />\n          </div>\n          <div className={styles.wrapper}>\n            <label htmlFor={emailId}>Email:</label>\n            <input\n              value={email}\n              onChange={handleChange}\n              type=\"email\"\n              name=\"email\"\n              id={emailId}\n              required\n            />\n          </div>\n          <div className={styles.wrapper}>\n            <label htmlFor={passwordId}>Password:</label>\n            <input\n              value={password}\n              onChange={handleChange}\n              type=\"password\"\n              name=\"password\"\n              id={passwordId}\n              required\n            />\n          </div>\n          <button type=\"submit\">Register</button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\n\nimport { signup } from '../../redux/auth/auth-operations';\n\nimport {\n  selectAuthLoading,\n  selectAuthError,\n} from '../../redux/auth/auth-selectors';\n\nconst RegisterPage = () => {\n  const authLoading = useSelector(selectAuthLoading);\n  const authError = useSelector(selectAuthError);\n\n  const dispatch = useDispatch();\n\n  const handleSignup = data => {\n    dispatch(signup(data));\n  };\n\n  return (\n    <div>\n      {authLoading && <p>...Register in progress</p>}\n      <RegisterForm onSubmit={handleSignup} />\n      {authError && <p style={{ color: 'red' }}>{authError}</p>}\n    </div>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["_jsx","className","styles","children","src","loop","autoPlay","muted","INITIAL_STATE","name","email","password","_ref","onSubmit","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","handleChange","_ref2","target","value","_defineProperty","nameId","useId","emailId","passwordId","_jsxs","BGVideo","e","preventDefault","htmlFor","onChange","type","id","required","authLoading","useSelector","selectAuthLoading","authError","selectAuthError","dispatch","useDispatch","RegisterForm","data","signup","style","color"],"sourceRoot":""}