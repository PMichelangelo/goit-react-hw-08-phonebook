{"version":3,"file":"static/js/643.82441e9e.chunk.js","mappings":"mQAIMA,EAAgB,CACpBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAoDZ,EAjDkB,SAAHC,GAAsB,IAAhBC,EAAQD,EAARC,SACnBC,GAA0BC,EAAAA,EAAAA,WAAQC,EAAAA,EAAAA,GAAC,CAAC,EAAIR,IAAgBS,GAAAC,EAAAA,EAAAA,GAAAJ,EAAA,GAAjDK,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAEhBI,EAAe,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OACdd,EAAgBc,EAAhBd,KAAMe,EAAUD,EAAVC,MACdJ,GAAQJ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EACLG,GAAK,IAAAM,EAAAA,EAAAA,GAAA,GACPhB,EAAOe,IAEZ,EAOME,GAAUC,EAAAA,EAAAA,SACVC,GAAaD,EAAAA,EAAAA,SAEXjB,EAAoBS,EAApBT,MAAOC,EAAaQ,EAAbR,SACf,OACEkB,EAAAA,EAAAA,MAAA,QAAMhB,SAVa,SAAAiB,GACnBA,EAAEC,iBACFlB,GAAQG,EAAAA,EAAAA,GAAC,CAAC,EAAIG,GAChB,EAO+Ba,SAAA,EAC3BH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAASR,EAAQM,SAAC,YACzBC,EAAAA,EAAAA,KAAA,SACET,MAAOd,EACPyB,SAAUd,EACVe,KAAK,QACL3B,KAAK,QACL4B,GAAIX,EACJY,UAAQ,QAGZT,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,SAAOC,QAASN,EAAWI,SAAC,eAC5BC,EAAAA,EAAAA,KAAA,SACET,MAAOb,EACPwB,SAAUd,EACVe,KAAK,WACL3B,KAAK,WACL4B,GAAIT,EACJU,UAAQ,QAGZL,EAAAA,EAAAA,KAAA,UAAQG,KAAK,SAAQJ,SAAC,YAG5B,E,oBCpBA,EAxBkB,WAChB,IAAMO,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,IAC1BC,GAAYF,EAAAA,EAAAA,IAAYG,EAAAA,IACxBC,GAAUJ,EAAAA,EAAAA,IAAYK,EAAAA,IAEtBC,GAAWC,EAAAA,EAAAA,MAMjB,OAAIH,GACKX,EAAAA,EAAAA,KAACe,EAAAA,GAAQ,CAACC,GAAG,eAGpBpB,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,eACHO,IAAeN,EAAAA,EAAAA,KAAA,KAAAD,SAAG,0BACnBC,EAAAA,EAAAA,KAACiB,EAAS,CAACrC,SAXK,SAAAsC,GAClBL,GAASM,EAAAA,EAAAA,GAAMD,GACjB,IAUKT,IAAaT,EAAAA,EAAAA,KAAA,KAAGoB,MAAO,CAAEC,MAAO,OAAQtB,SAAEU,MAGjD,C","sources":["components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["import { useState, useId } from 'react';\n\n//import styles from './loginForm.module.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nconst LoginForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...INITIAL_STATE });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n  };\n\n  const emailId = useId();\n  const passwordId = useId();\n\n  const { email, password } = state;\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor={emailId}>Email:</label>\n        <input\n          value={email}\n          onChange={handleChange}\n          type=\"email\"\n          name=\"email\"\n          id={emailId}\n          required\n        />\n      </div>\n      <div>\n        <label htmlFor={passwordId}>Password:</label>\n        <input\n          value={password}\n          onChange={handleChange}\n          type=\"password\"\n          name=\"password\"\n          id={passwordId}\n          required\n        />\n      </div>\n      <button type=\"submit\">Login</button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport LoginForm from 'components/LoginForm/LoginForm';\n\nimport { login } from '../../redux/auth/auth-operations';\n\nimport {\n  selectAuthLoading,\n  selectAuthError,\n  selectAuthIsLogin,\n} from '../../redux/auth/auth-selectors';\n\nconst LoginPage = () => {\n  const authLoading = useSelector(selectAuthLoading);\n  const authError = useSelector(selectAuthError);\n  const isLogin = useSelector(selectAuthIsLogin);\n\n  const dispatch = useDispatch();\n\n  const handleLogin = data => {\n    dispatch(login(data));\n  };\n\n  if (isLogin) {\n    return <Navigate to=\"/contacts\" />;\n  }\n  return (\n    <div>\n      <h1>Login Page</h1>\n      {authLoading && <p>...Login in progress</p>}\n      <LoginForm onSubmit={handleLogin} />\n      {authError && <p style={{ color: 'red' }}>{authError}</p>}\n    </div>\n  );\n};\n\nexport default LoginPage;\n"],"names":["INITIAL_STATE","name","email","password","_ref","onSubmit","_useState","useState","_objectSpread","_useState2","_slicedToArray","state","setState","handleChange","_ref2","target","value","_defineProperty","emailId","useId","passwordId","_jsxs","e","preventDefault","children","_jsx","htmlFor","onChange","type","id","required","authLoading","useSelector","selectAuthLoading","authError","selectAuthError","isLogin","selectAuthIsLogin","dispatch","useDispatch","Navigate","to","LoginForm","data","login","style","color"],"sourceRoot":""}